// <auto-generated />
using System;
using MasAcademyLab.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MasAcademyLab.Data.Migrations
{
    [DbContext(typeof(MasAcademyLabContext))]
    [Migration("20210119100843_TrainingData")]
    partial class TrainingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MasAcademyLab.Domain.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address1 = "123 Main Street",
                            CityTown = "Atlanta",
                            Country = "USA",
                            PostalCode = "12345",
                            StateProvince = "GA",
                            VenueName = "Atlanta Convention Center"
                        });
                });

            modelBuilder.Entity("MasAcademyLab.Domain.Speaker", b =>
                {
                    b.Property<int>("SpeakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BlogUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitHub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpeakerId");

                    b.ToTable("Speakers");

                    b.HasData(
                        new
                        {
                            SpeakerId = 1,
                            BlogUrl = "http://wildermuth.com",
                            Company = "Wilder Minds LLC",
                            CompanyUrl = "http://wilderminds.com",
                            FirstName = "Shawn",
                            GitHub = "shawnwildermuth",
                            LastName = "Wildermuth",
                            Twitter = "shawnwildermuth"
                        },
                        new
                        {
                            SpeakerId = 2,
                            BlogUrl = "http://shawnandresa.com",
                            Company = "Wilder Minds LLC",
                            CompanyUrl = "http://wilderminds.com",
                            FirstName = "Resa",
                            GitHub = "resawildermuth",
                            LastName = "Wildermuth",
                            Twitter = "resawildermuth"
                        });
                });

            modelBuilder.Entity("MasAcademyLab.Domain.Talk", b =>
                {
                    b.Property<int>("TalkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("SpeakerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrainingId")
                        .HasColumnType("int");

                    b.HasKey("TalkId");

                    b.HasIndex("SpeakerId");

                    b.HasIndex("TrainingId");

                    b.ToTable("Talks");

                    b.HasData(
                        new
                        {
                            TalkId = 1,
                            Abstract = "Entity Framework from scratch in an hour. Probably cover it all",
                            Level = 100,
                            SpeakerId = 1,
                            Title = "Entity Framework From Scratch",
                            TrainingId = 1
                        },
                        new
                        {
                            TalkId = 2,
                            Abstract = "Thinking of good sample data examples is tiring.",
                            Level = 200,
                            SpeakerId = 2,
                            Title = "Writing Sample Data Made Easy",
                            TrainingId = 1
                        });
                });

            modelBuilder.Entity("MasAcademyLab.Domain.Training", b =>
                {
                    b.Property<int>("TrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingId");

                    b.HasIndex("LocationId");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            TrainingId = 1,
                            EventDate = new DateTime(2018, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = 1,
                            LocationId = 1,
                            Name = "Atlanta Code Camp"
                        });
                });

            modelBuilder.Entity("MasAcademyLab.Domain.Talk", b =>
                {
                    b.HasOne("MasAcademyLab.Domain.Speaker", "Speaker")
                        .WithMany()
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasAcademyLab.Domain.Training", "Training")
                        .WithMany("Talks")
                        .HasForeignKey("TrainingId");

                    b.Navigation("Speaker");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("MasAcademyLab.Domain.Training", b =>
                {
                    b.HasOne("MasAcademyLab.Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("MasAcademyLab.Domain.Training", b =>
                {
                    b.Navigation("Talks");
                });
#pragma warning restore 612, 618
        }
    }
}
